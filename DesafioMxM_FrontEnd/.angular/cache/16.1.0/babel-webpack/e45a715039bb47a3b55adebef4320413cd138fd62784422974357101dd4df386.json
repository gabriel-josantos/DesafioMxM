{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction FormComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", item_r1.name);\n  }\n}\nclass FormComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.formData = [{\n      label: 'Nome Completo',\n      name: 'name'\n    }, {\n      label: 'CPF',\n      name: 'legalId'\n    }, {\n      label: 'Email',\n      name: 'email'\n    }, {\n      label: 'Telefone',\n      name: 'phoneNumber'\n    }];\n    this.formRegister = this.formBuilder.group({\n      name: [''],\n      legalId: [''],\n      email: [''],\n      phoneNumber: ['']\n    });\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"formGroup\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"\"], [\"type\", \"text\", 3, \"formControlName\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵtemplate(1, FormComponent_div_1_Template, 4, 2, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.formRegister);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.formData);\n    }\n  },\n  dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FormComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","item_r1","label","ɵɵpropertyInterpolate","name","FormComponent","constructor","formBuilder","formData","formRegister","group","legalId","email","phoneNumber","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵtemplate","FormComponent_div_1_Template","ɵɵproperty"],"sources":["C:\\Users\\gabri\\OneDrive\\Área de Trabalho\\DesafioMxMAngular\\DesafioMxM_FrontEnd\\src\\app\\modules\\home\\components\\form\\form.component.ts","C:\\Users\\gabri\\OneDrive\\Área de Trabalho\\DesafioMxMAngular\\DesafioMxM_FrontEnd\\src\\app\\modules\\home\\components\\form\\form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormData } from '../../models/formData';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent {\n  public formData: Array<FormData> = [\n    { label: 'Nome Completo', name: 'name' },\n    { label: 'CPF', name: 'legalId' },\n    { label: 'Email', name: 'email' },\n    { label: 'Telefone', name: 'phoneNumber' },\n  ];\n\n  public formRegister: FormGroup = this.formBuilder.group({\n    name: [''],\n    legalId: [''],\n    email: [''],\n    phoneNumber: [''],\n  });\n\n  constructor(private formBuilder: FormBuilder) {}\n}\n","<form [formGroup]=\"formRegister\">\n  <div *ngFor=\"let item of formData\">\n    <label for=\"\">{{ item.label }}</label>\n    <input type=\"text\" formControlName=\"{{ item.name }}\" />\n  </div>\n</form>\n"],"mappings":";;;;;ICCEA,EAAA,CAAAC,cAAA,UAAmC;IACnBD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACtCH,EAAA,CAAAI,SAAA,eAAuD;IACzDJ,EAAA,CAAAG,YAAA,EAAM;;;;IAFUH,EAAA,CAAAK,SAAA,GAAgB;IAAhBL,EAAA,CAAAM,iBAAA,CAAAC,OAAA,CAAAC,KAAA,CAAgB;IACXR,EAAA,CAAAK,SAAA,GAAiC;IAAjCL,EAAA,CAAAS,qBAAA,oBAAAF,OAAA,CAAAG,IAAA,CAAiC;;;ADCxD,MAKaC,aAAa;EAexBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAdxB,KAAAC,QAAQ,GAAoB,CACjC;MAAEN,KAAK,EAAE,eAAe;MAAEE,IAAI,EAAE;IAAM,CAAE,EACxC;MAAEF,KAAK,EAAE,KAAK;MAAEE,IAAI,EAAE;IAAS,CAAE,EACjC;MAAEF,KAAK,EAAE,OAAO;MAAEE,IAAI,EAAE;IAAO,CAAE,EACjC;MAAEF,KAAK,EAAE,UAAU;MAAEE,IAAI,EAAE;IAAa,CAAE,CAC3C;IAEM,KAAAK,YAAY,GAAc,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACtDN,IAAI,EAAE,CAAC,EAAE,CAAC;MACVO,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,WAAW,EAAE,CAAC,EAAE;KACjB,CAAC;EAE6C;;AAfpCR,aAAa,C;mBAAbA,aAAa,EAAAX,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAbX,aAAa,C;QAAbA,aAAa;EAAAY,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT1B7B,EAAA,CAAAC,cAAA,cAAiC;MAC/BD,EAAA,CAAA+B,UAAA,IAAAC,4BAAA,iBAGM;MACRhC,EAAA,CAAAG,YAAA,EAAO;;;MALDH,EAAA,CAAAiC,UAAA,cAAAH,GAAA,CAAAf,YAAA,CAA0B;MACRf,EAAA,CAAAK,SAAA,GAAW;MAAXL,EAAA,CAAAiC,UAAA,YAAAH,GAAA,CAAAhB,QAAA,CAAW;;;;;;SDQtBH,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}